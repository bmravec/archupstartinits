#
# initscripts functions
#

# width:

JOB_NAME="${1}"

# disable colors on broken terminals
TERM_COLORS="$(/bin/tput colors 2>/dev/null)"
if [ $? = 3 ]; then
    TERM_COLORS=8
elif [ -n "${TERM_COLORS}" ]; then
    case "${TERM_COLORS}" in
        *[!0-9]*)
            USECOLOR=""
            ;;
        *)
            [ "${TERM_COLORS}" -lt 8 ] && USECOLOR=""
            ;;
    esac
else
    USECOLOR=""
fi
unset TERM_COLORS

# clear the TZ envvar, so daemons always respect /etc/localtime
unset TZ

# colors:
if [ "$USECOLOR" = "YES" -o "$USECOLOR" = "yes" ]; then
    C_MAIN="\033[1;37;40m"      # main text
    C_OTHER="\033[1;34;40m"     # prefix & brackets
    C_SEPARATOR="\033[1;30;40m" # separator

    C_BUSY="\033[0;36;40m"      # busy
    C_FAIL="\033[1;31;40m"      # failed
    C_DONE="\033[1;37;40m"      # completed
    C_BKGD="\033[1;35;40m"      # backgrounded

    C_H1="\033[1;37;40m"        # highlight text 1
    C_H2="\033[1;36;40m"        # highlight text 2

    C_CLEAR="\033[1;0m"
fi

if [ -t 1 ]; then
    SAVE_POSITION="\033[s"
    RESTORE_POSITION="\033[u"
else
    SAVE_POSITION=""
    RESTORE_POSITION=""
fi

# prefixes:

PREFIX_REG="::"
PREFIX_HL=">"

# functions:

printhl() {
    printf "${C_H1}${JOB_NAME} ${C_OTHER}${PREFIX_HL} ${C_H1}${1}${C_CLEAR}\n"
}

printsep() {
    printf "\n${C_SEPARATOR}   ------------------------------\n"
}

stat_append() {
    printf "${RESTORE_POSITION}"
    printf -- "${C_MAIN}${1}${C_CLEAR}"
    printf "${SAVE_POSITION}"
}

stat_start() {
    printf "${C_H1}${JOB_NAME} ${C_OTHER}${PREFIX_REG} ${C_MAIN}${1}${C_CLEAR}\n"
}

stat_done() {
    if ! [ "${1}" = "" ]; then
        printf "${C_H1}${JOB_NAME} ${C_OTHER}${PREFIX_REG} ${C_MAIN}${1}${C_CLEAR}\n"
    else
        printf "${C_H1}${JOB_NAME} ${C_OTHER}${PREFIX_REG} ${C_MAIN}Done${C_CLEAR}\n"
    fi
}

stat_fail() {
    if ! [ "${1}" = "" ]; then
        printf "${C_H1}${JOB_NAME} ${C_OTHER}${PREFIX_REG} ${C_FAIL}${1}${C_CLEAR}\n"
    else
        printf "${C_H1}${JOB_NAME} ${C_OTHER}${PREFIX_REG} ${C_FAIL}Failed${C_CLEAR}\n"
    fi
}

stat_die() {
    retval=1
    [ "$1" = "" ] || retval=$1
    stat_fail
    exit $retval
}

status() {
    stat_start "$1"
    shift
    $* >/dev/null 2>&1
    if [ $? -eq 0 ]; then
        stat_done
        return 0
    else
        stat_fail
        return 1
    fi
}
